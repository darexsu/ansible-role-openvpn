---
# OpenVPN
openvpn:
  enabled: false
  version: "2.4"
  repo: "third_party"
  server_ip: "{{ ansible_default_ipv4.address | default(ansible_all_ipv4_addresses[0]) }}"
  server_port: "1194"
  server_subnet: "10.8.0.0"
  net_ipv4_ip_forward: true
  service:
    enabled: true
    state: "started"

# OpenVPN -> install
openvpn_install:
  enabled: false

# OpenVPN -> Certificate_Authority
openvpn_ca:
  enabled: false
  path: "/etc/openvpn/ca/"
  diffie_hellman_bit: "2048"
  privatekey_passphrase: "change_me"         # <-- Change
  common_name: "{{ ansible_fqdn }}"
  country_name: "US"
  state_or_province_name: "New York"
  locality_name: "New York City"
  organization_name: "Organization_Name"
  organizational_unit_name: "Community"
  email_address: "example@gmail.com"
  basic_constraints: 'CA:TRUE'

# OpenVPN -> sign with CA
openvpn_sign_with_ca:
  server:
    enabled: false
    path: "/etc/openvpn/server/"
    common_name: "server"
    key_usage: ["digitalSignature", "keyAgreement"]
    extended_key_usage: "TLS Web Server Authentication"
  client:
    enabled: false
    path: "/etc/openvpn/client/"
    common_name: "client"
    key_usage: ["digitalSignature", "keyAgreement"]
    extended_key_usage: "TLS Web Client Authentication"

# OpenVPN -> config
openvpn_config:
  server:
    enabled: false
    file: "server.conf"
    src: "config_conf.j2"
    path: "/etc/openvpn/server/"
    backup: false
    data: |
      port {{ openvpn.server_port }}
      proto udp
      dev tun
      ca {{ openvpn_ca.path }}{{ ansible_fqdn }}.crt
      cert {{ openvpn_sign_with_ca.server.path }}server.crt
      key {{ openvpn_sign_with_ca.server.path }}server.key
      dh {{ openvpn_ca.path }}dh.pem
      topology subnet
      push "redirect-gateway def1 bypass-dhcp"
      push "dhcp-option DNS 8.8.8.8"
      push "dhcp-option DNS 8.8.4.4"
      server {{ openvpn.server_subnet }} 255.255.255.0
      ifconfig-pool-persist /etc/openvpn/server/ipp.txt
      client-config-dir /etc/openvpn/ccd
      tun-mtu 1500
      keepalive 10 120
      cipher AES-256-GCM
      tls-server
      auth SHA256
      client-to-client
      status /var/log/openvpn/openvpn-status.log
      log /var/log/openvpn/openvpn.log
      verb 2
  client:
    enabled: false
    file: "client.conf"
    src: "config_conf.j2"
    path: "/etc/openvpn/client/"
    backup: false
    data: |
      client
      dev tun
      proto udp
      remote {{ openvpn.server_ip }} {{ openvpn.server_port }}
      remote-cert-tls server
      auth SHA256
      cipher AES-256-GCM
      tun-mtu 1500
      resolv-retry infinite
      nobind
      persist-key
      persist-tun
      log-append /var/log/openvpn/openvpn-client.log
      verb 2

# OpenVPN -> constants
openvpn_const:
  RedHat:
    dependencies: ["gnupg", "python3-cryptography"]
    packages: "openvpn-{{ openvpn.version }}*"
    epel_repo: "https://dl.fedoraproject.org/pub/epel/epel-release-latest-{{ ansible_distribution_major_version }}.noarch.rpm"
    epel_gpg: "https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-{{ ansible_distribution_major_version }}"
    service_name: "openvpn-server@server"
  Debian:
    dependencies: ["apt-transport-https", "gnupg", "python3-cryptography"]
    packages: "openvpn={{ openvpn.version }}*"
    openvpn_repo: "deb http://build.openvpn.net/debian/openvpn/release/{{ openvpn.version }}/ {{ ansible_distribution_release }} main"
    openvpn_gpg: "https://swupdate.openvpn.net/repos/repo-public.gpg"
    service_name: "openvpn-server@server"

# FirewallD
firewalld:
  enabled: false
  service:
    enabled: true
    state: "started"
# FirewallD -> install
firewalld_install:
  enabled: false
  packages: [firewalld]
# FirewallD -> rules
firewalld_rules:
  trust_tun:
    enabled: false
    zone: "trusted"
    state: "enabled"
    interface: "tun0"
    permanent: true
  openvpn_port:
    enabled: false
    zone: "public"
    state: "enabled"
    port: "{{ openvpn.server_port }}/udp"
    permanent: true
    immediate: true