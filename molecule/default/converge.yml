---
- name: Converge
  hosts: all
  become: true

  pre_tasks:
    - name: Unnessessary command
      ansible.builtin.shell:
        cmd: "{{ lookup('env', 'ANSIBLE_COMMAND') }}"
      when: lookup('env', 'ANSIBLE_COMMAND') | length > 0

  vars:
    # OpenVPN
    openvpn:
      enabled: true
      version: "2.4"
      repo: "third_party"
      server_ip: "{{ ansible_default_ipv4.address | default(ansible_all_ipv4_addresses[0]) }}"
      server_port: "1194"
      server_subnet: "10.8.0.0"
      net_ipv4_ip_forward: true
      service:
        enabled: true
        state: "started"

    # OpenVPN -> install
    openvpn_install:
      enabled: true

    # OpenVPN -> Certificate_Authority
    openvpn_ca:
      enabled: true
      path: "/etc/openvpn/ca/"
      diffie_hellman_bit: "2048"
      privatekey_passphrase: "change_me"         # <-- Change
      common_name: "{{ ansible_fqdn }}"
      country_name: "US"
      state_or_province_name: "New York"
      locality_name: "New York City"
      organization_name: "Organization_Name"
      organizational_unit_name: "Community"
      email_address: "example@gmail.com"
      basic_constraints: 'CA:TRUE'

    # OpenVPN -> sign with CA
    openvpn_sign_with_ca:
      server:
        enabled: true
        path: "/etc/openvpn/server/"
        common_name: "server"
        key_usage: ["digitalSignature", "keyAgreement"]
        extended_key_usage: "TLS Web Server Authentication"
      client:
        enabled: true
        path: "/etc/openvpn/client/"
        common_name: "client"
        key_usage: ["digitalSignature", "keyAgreement"]
        extended_key_usage: "TLS Web Client Authentication"

    # OpenVPN -> config
    openvpn_config:
      server:
        enabled: true
        file: "server.conf"
        src: "config_conf.j2"
        path: "/etc/openvpn/server/"
        backup: false
        data: |
          port {{ openvpn.server_port }}
          proto udp
          dev tun
          ca {{ openvpn_ca.path }}{{ ansible_fqdn }}.crt
          cert {{ openvpn_sign_with_ca.server.path }}server.crt
          key {{ openvpn_sign_with_ca.server.path }}server.key
          dh {{ openvpn_ca.path }}dh.pem
          topology subnet
          push "redirect-gateway def1 bypass-dhcp"
          push "dhcp-option DNS 8.8.8.8"
          push "dhcp-option DNS 8.8.4.4"
          server {{ openvpn.server_subnet }} 255.255.255.0
          ifconfig-pool-persist /etc/openvpn/server/ipp.txt
          tun-mtu 1500
          keepalive 10 120
          cipher AES-256-GCM
          tls-server
          auth SHA256
          client-to-client
          status /var/log/openvpn/openvpn-status.log
          log /var/log/openvpn/openvpn.log
          verb 2
      client:
        enabled: true
        file: "client.conf"
        src: "config_conf.j2"
        path: "/etc/openvpn/client/"
        backup: false
        data: |
          client
          dev tun
          proto udp
          remote {{ openvpn.server_ip }} {{ openvpn.server_port }}
          remote-cert-tls server
          auth SHA256
          cipher AES-256-GCM
          tun-mtu 1500
          resolv-retry infinite
          nobind
          persist-key
          persist-tun
          log-append /var/log/openvpn/openvpn-client.log
          verb 2

    # FirewallD
    firewalld:
      enabled: true
      service:
        enabled: true
        state: "started"
    # FirewallD -> install
    firewalld_install:
      enabled: true
      packages: [firewalld]
    # FirewallD -> rules
    firewalld_rules:
      public_zone_masquerade:
        enabled: true
        zone: "public"
        state: enabled
        permanent: true
        masquerade: true
      openvpn_service:
        enabled: true
        zone: "public"
        service: "openvpn"
        state: "enabled"
        permanent: true
      public_zone_tun:
        enabled: true
        zone: "public"
        state: "enabled"
        interface: "tun0"
        permanent: true

  tasks:
    - name: role darexsu.openvpn
      include_role:
        name: darexsu.openvpn